#!/usr/bin/env nextflow
// ====================  Nextflow/Container Config  ==========

manifest {
    name = "ChIA-PIPE"
    description = 'ChIA-PIPE Pipeline'
    author = 'Sai Lek'
    mainScript = "main.nf"
    nextflowVersion = '!>=21.04.0'
    version = "1.0.00"
}

// Included Default Config Settings
def simgPath = "$projectDir/images"

params.email = params.email ?: "DEBUG-DEFAULT-TBD@jax.org"
params.outputDir = params.outputDir ?: "${manifest.name}_results"
params.CHIAPETSupportFiles = simgPath //default path for all images

// Include JAX Universal Config Settings
univcfg = new File("$projectDir/universal.config")
if (univcfg.canRead()) { includeConfig univcfg }
else {
    profiles {
        standard { process.executor = "local" }
        sumner {
            process.executor = "slurm"
            process.module = "slurm"
            process.clusterOptions = "-q batch"
        }
    }
}


process {
    errorStrategy = { task.attempt <= 2 ? "retry" : "finish" } // retry<=2 : 3 tries

    time = { 6.hour * task.attempt }
    memory = { 15.GB * task.attempt }

    sifs = "${simgPath}/cache"

    withLabel: cpuprg    { container = "library://chia-pipe/cpu:0.0.1a-r2" }    
    withLabel: samtools  { container = "library://chia-pipe/samtools:1.5-0"  }                
    withLabel: kentUtils { container = "docker://vrsingan/ucsc-kentutils:latest" }               
    withLabel: spp       { container = "library://chia-pipe/r-spp:1.13-r_3.2.2"  }                    
    withLabel: macs2     { container = "library://chia-pipe/macs2:2.1.0.20151222" }                 
    withLabel: tools     { container = "docker://duplexa/4dn-hic:v43" }
}

notification {
    enabled = false // true
    to = params.email
    from = "nxf-${manifest.name}"
}

singularity {
    enabled = true
    process.module = "singularity"
    cacheDir = "${simgPath}/cache"
    autoMounts = true
    runOptions = ''
    engineOptions = ''
}

env {
    NXF_ANSI_SUMMARY = true
    NXF_ANSI_LOG = true
    NXF_DEBUG = 2
    PYTHONNOUSERSITE = 1
}

timeline {
    enabled = false // true
    file = "${params.outputDir}/nxf_status/timeline.html"
}

report {
    enabled = false // true
    file = "${params.outputDir}/nxf_status/report.html"
}

weblog {
    enabled = false // true
}

trace {
    enabled = false // true
    file = "${params.outputDir}/nxf_status/trace.txt"
    fields = ""\
       + "task_id,"   \
       + "hash,"      \
       + "process,"   \
       + "tag,"       \
       + "status,"    \
       + "exit,"      \
       + "start,"     \
       + "container," \
       + "cpus,"      \
       + "time,"      \
       + "disk,"      \
       + "memory,"    \
       + "duration,"  \
       + "realtime,"  \
       + "queue,"     \
       + "%cpu,"      \
       + "%mem,"      \
       + "rss,"       \
       + "vmem,"      \
       + "rchar,"     \
       + "wchar"
    }

